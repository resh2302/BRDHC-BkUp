#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_65818_brdhc")]
public partial class eventsCalendarDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertbrdhc_Event(brdhc_Event instance);
  partial void Updatebrdhc_Event(brdhc_Event instance);
  partial void Deletebrdhc_Event(brdhc_Event instance);
  #endregion
	
	public eventsCalendarDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["myCon"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public eventsCalendarDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public eventsCalendarDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public eventsCalendarDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public eventsCalendarDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<brdhc_Event> brdhc_Events
	{
		get
		{
			return this.GetTable<brdhc_Event>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.brdhc_Events")]
public partial class brdhc_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _EventId;
	
	private string _EventTitle;
	
	private string _EventDescription;
	
	private System.Guid _EventCreatedBy;
	
	private System.DateTime _EventDate;
	
	private System.TimeSpan _EventStartTime;
	
	private string _EventLocation;
	
	private string _EventsHeldBy;
	
	private bool _IsApproved;
	
	private System.TimeSpan _EventEndTime;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(System.Guid value);
    partial void OnEventIdChanged();
    partial void OnEventTitleChanging(string value);
    partial void OnEventTitleChanged();
    partial void OnEventDescriptionChanging(string value);
    partial void OnEventDescriptionChanged();
    partial void OnEventCreatedByChanging(System.Guid value);
    partial void OnEventCreatedByChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnEventStartTimeChanging(System.TimeSpan value);
    partial void OnEventStartTimeChanged();
    partial void OnEventLocationChanging(string value);
    partial void OnEventLocationChanged();
    partial void OnEventsHeldByChanging(string value);
    partial void OnEventsHeldByChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnEventEndTimeChanging(System.TimeSpan value);
    partial void OnEventEndTimeChanged();
    #endregion
	
	public brdhc_Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTitle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EventTitle
	{
		get
		{
			return this._EventTitle;
		}
		set
		{
			if ((this._EventTitle != value))
			{
				this.OnEventTitleChanging(value);
				this.SendPropertyChanging();
				this._EventTitle = value;
				this.SendPropertyChanged("EventTitle");
				this.OnEventTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDescription", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string EventDescription
	{
		get
		{
			return this._EventDescription;
		}
		set
		{
			if ((this._EventDescription != value))
			{
				this.OnEventDescriptionChanging(value);
				this.SendPropertyChanging();
				this._EventDescription = value;
				this.SendPropertyChanged("EventDescription");
				this.OnEventDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCreatedBy", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid EventCreatedBy
	{
		get
		{
			return this._EventCreatedBy;
		}
		set
		{
			if ((this._EventCreatedBy != value))
			{
				this.OnEventCreatedByChanging(value);
				this.SendPropertyChanging();
				this._EventCreatedBy = value;
				this.SendPropertyChanged("EventCreatedBy");
				this.OnEventCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="Date NOT NULL")]
	public System.DateTime EventDate
	{
		get
		{
			return this._EventDate;
		}
		set
		{
			if ((this._EventDate != value))
			{
				this.OnEventDateChanging(value);
				this.SendPropertyChanging();
				this._EventDate = value;
				this.SendPropertyChanged("EventDate");
				this.OnEventDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventStartTime", DbType="Time NOT NULL")]
	public System.TimeSpan EventStartTime
	{
		get
		{
			return this._EventStartTime;
		}
		set
		{
			if ((this._EventStartTime != value))
			{
				this.OnEventStartTimeChanging(value);
				this.SendPropertyChanging();
				this._EventStartTime = value;
				this.SendPropertyChanged("EventStartTime");
				this.OnEventStartTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLocation", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string EventLocation
	{
		get
		{
			return this._EventLocation;
		}
		set
		{
			if ((this._EventLocation != value))
			{
				this.OnEventLocationChanging(value);
				this.SendPropertyChanging();
				this._EventLocation = value;
				this.SendPropertyChanged("EventLocation");
				this.OnEventLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventsHeldBy", DbType="VarChar(100)")]
	public string EventsHeldBy
	{
		get
		{
			return this._EventsHeldBy;
		}
		set
		{
			if ((this._EventsHeldBy != value))
			{
				this.OnEventsHeldByChanging(value);
				this.SendPropertyChanging();
				this._EventsHeldBy = value;
				this.SendPropertyChanged("EventsHeldBy");
				this.OnEventsHeldByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventEndTime", DbType="Time NOT NULL")]
	public System.TimeSpan EventEndTime
	{
		get
		{
			return this._EventEndTime;
		}
		set
		{
			if ((this._EventEndTime != value))
			{
				this.OnEventEndTimeChanging(value);
				this.SendPropertyChanging();
				this._EventEndTime = value;
				this.SendPropertyChanged("EventEndTime");
				this.OnEventEndTimeChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
